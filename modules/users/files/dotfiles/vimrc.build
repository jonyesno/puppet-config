set nocompatible " duh!
set shiftwidth=2
set bs=2 " allow backspacing in insert mode
set tabstop=2
set autoindent
set smartindent
set expandtab
set smarttab
set number
set nowrap
set encoding=utf8
set fileencoding=utf8
set autoread " read files that have changed on disk but not in vim automatically
set autowrite " save
set autowriteall " always
set incsearch " incremental search
set showmatch " show matching [{(
set hlsearch
set ignorecase
set smartcase
set hidden " don't need to save buffers when putting them in the background
set history=1000
set wildmenu
set wildmode=list:longest
set title
set scrolloff=3
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp

" faster updatetime for taglist
set updatetime=1000
set showcmd      " display incomplete commands
set nostartofline           " Avoid moving cursor to BOL when jumping around
set virtualedit=block       " Let cursor move past the last char in <C-v> mode
set lazyredraw

" bash like C-a in command mode
:cnoremap <C-A> <Home>

" Persistent undo
if has("persistent_undo")
  set undodir=~/.vim-tmp/undodir,~/.tmp/undodir,~/tmp/undodir,/var/tmp/undodir,/tmp/undodir
  set undofile
  set undolevels=1000 "maximum number of changes that can be undone
  set undoreload=10000 "maximum number lines to save for undo on a buffer reload
endif

"""" Windows, Buffers
set noequalalways           " Don't keep resizing all windows to the same size
set switchbuf=useopen,usetab      " Allow changing tabs/windows for quickfix/:sb/etc
set splitright              " New windows open to the right of the current one
set splitbelow              " New windows open below the current one

"""" Showing whitespace/tabs
if &enc =~ '^u\(tf\|cs\)'   " When running in a Unicode environment,
  set list                  " visually represent certain invisible characters:
  let s:arr = nr2char(9657) " using U+25B9 (▹) for an arrow, and
  let s:dot = nr2char(8901) " using U+22C5 (⋅) for a very light dot,
  " display tabs as an arrow followed by some dots (	⋅⋅⋅⋅⋅⋅⋅),
  exe "set listchars=tab:"    . s:arr . s:dot
  " and display trailing and non-breaking spaces as U+22C5 (⋅).
  exe "set listchars+=trail:" . s:dot
  exe "set listchars+=nbsp:"  . s:dot
  " Also show an arrow+space (↪ ) at the beginning of any wrapped long lines?
  " I don't like this, but I probably would if I didn't use line numbers.
  " let &sbr=nr2char(8618).' '
else
  set listchars=tab:>-,trail:·,eol:$
endif
nmap <silent> <leader>w :set list!<CR>
set nolist


filetype on
filetype indent on
filetype plugin on
syntax on

" Make rack files ruby
autocmd BufRead,BufNewFile *.ru setfiletype ruby

"   Edit another file in the same directory as the current file 
"   uses expression to extract path from current file's path 
"  (thanks Douglas Potts) 
map ,e :sp <C-R>=expand("%:p:h")."/"<CR>
map <e :vsp <C-R>=expand("%:p:h")."/"<CR>
map >e :e <C-R>=expand("%:p:h")."/"<CR>

